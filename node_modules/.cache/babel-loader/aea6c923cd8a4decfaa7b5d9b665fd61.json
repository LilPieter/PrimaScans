{"ast":null,"code":"import { APIKEY, URL_PATH, URL_EXTENSION } from '../../assets/config';\nexport const startScanning = () => {\n  return {\n    type: \"START_SCANNING\"\n  };\n};\nexport const clearScanned = () => {\n  return {\n    type: 'CLEAR_SCANNED'\n  };\n};\nexport const setItem = i => {\n  return {\n    type: 'SET_ITEM',\n    payload: i\n  };\n};\nexport const deleteItem = i => {\n  return {\n    type: 'DELETE_ITEM',\n    payload: i\n  };\n};\nexport const processBarcode = barcode => {\n  return dispatch => {\n    dispatch(spinnerOn());\n    let url = URL_PATH + barcode + URL_EXTENSION + APIKEY;\n    let req = new Request(url, {\n      headers: {\n        'Access-Control-Allow-Origin': 'http://localhost:3000'\n      },\n      mode: 'no-cors'\n    });\n    let product = null;\n    fetch(req).catch(err => console.log('error', err)).then(res => {\n      console.log(res.status);\n      if (res.status !== 200) {\n        return {\n          resStatus: res.status\n        };\n      } else if (res.status === 200) {\n        return res.json();\n      }\n    }).then(parsedRes => {\n      if (parsedRes.resStatus !== 200) {\n        parsedRes.resStatus === 0 ? dispatch(invalidBarcode('noAPI')) : dispatch(invalidBarcode('invalid'));\n      } else {\n        product = {\n          barcode_number: parsedRes.products[0].barcode_number,\n          barcode_type: parsedRes.products[0].barcode_type,\n          product_name: parsedRes.products[0].product_name,\n          product_image: parsedRes.products[0].images[0],\n          manufacturer: parsedRes.products[0].manufacturer,\n          brand: parsedRes.products[0].brand,\n          category: parsedRes.products[0].category,\n          description: parsedRes.products[0].description\n        };\n        dispatch(productDetected(product));\n      }\n    });\n  };\n};\nexport const spinnerOn = () => {\n  return {\n    type: 'SPINNER_ON'\n  };\n};\nexport const productDetected = product => {\n  return {\n    type: 'PRODUCT_DETECTED',\n    payload: product\n  };\n};\nexport const invalidBarcode = err => {\n  let errText = err === 'noAPI' ? 'NO_API_KEY' : 'INVALID_BARCODE';\n  return {\n    type: errText\n  };\n};","map":{"version":3,"names":["APIKEY","URL_PATH","URL_EXTENSION","startScanning","type","clearScanned","setItem","i","payload","deleteItem","processBarcode","barcode","dispatch","spinnerOn","url","req","Request","headers","mode","product","fetch","catch","err","console","log","then","res","status","resStatus","json","parsedRes","invalidBarcode","barcode_number","products","barcode_type","product_name","product_image","images","manufacturer","brand","category","description","productDetected","errText"],"sources":["C:/Users/ezrak/Documents/PrimaScan v2/src/store/actions/scannedItems.js"],"sourcesContent":["\nimport {APIKEY, URL_PATH, URL_EXTENSION} from '../../assets/config'\n\nexport const startScanning = () => {\n  return {\n    type: \"START_SCANNING\"\n  }\n}\n\nexport const clearScanned = () => {\n  return {\n    type: 'CLEAR_SCANNED'\n  }\n}\n\nexport const setItem = (i) => {\n  return {\n    type: 'SET_ITEM',\n    payload: i\n  }\n}\n\nexport const deleteItem = (i) => {\n  return {\n    type: 'DELETE_ITEM',\n    payload: i\n  }\n}\n\nexport const processBarcode = (barcode) => {\n  return dispatch => {\n    dispatch(spinnerOn())\n    \n    let url = URL_PATH + barcode + URL_EXTENSION + APIKEY\n    \n    let req = new Request(url , {\n      headers: {\n        'Access-Control-Allow-Origin': 'http://localhost:3000'\n      },\n      mode: 'no-cors'\n    })\n    \n    let product = null\n    fetch(req)\n    .catch(err => console.log('error', err))\n    .then(res => {\n      console.log(res.status)\n      if(res.status !== 200){\n        return {\n          resStatus: res.status\n        }\n      } else if(res.status === 200) {\n        return res.json()\n      }\n    })\n    .then(parsedRes => {\n      if(parsedRes.resStatus !== 200){\n        parsedRes.resStatus === 0 ? dispatch(invalidBarcode('noAPI')) : dispatch(invalidBarcode('invalid'))\n      } else {\n        product = {\n          barcode_number: parsedRes.products[0].barcode_number,\n          barcode_type: parsedRes.products[0].barcode_type,\n          product_name: parsedRes.products[0].product_name,\n          product_image: parsedRes.products[0].images[0],\n          manufacturer: parsedRes.products[0].manufacturer,\n          brand: parsedRes.products[0].brand,\n          category: parsedRes.products[0].category,\n          description: parsedRes.products[0].description,\n        }\n        dispatch(productDetected(product))\n      } \n    })\n  }\n  }\n\nexport const spinnerOn = () => {\n  return {\n    type: 'SPINNER_ON'\n  }\n}\n  \n  \nexport const productDetected = (product) => {\n  return {\n    type: 'PRODUCT_DETECTED',\n    payload: product\n  }\n}\n\nexport const invalidBarcode = (err) => {\n  let errText = err === 'noAPI' ? 'NO_API_KEY' : 'INVALID_BARCODE'\n  return {\n    type: errText,\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}